{"version":3,"sources":["components/ReactPageScroller.js","components/Home.js","components/SecondComponent.js","components/ThirdComponent.js","components/FourthComponent.js","components/FifthComponent.js","components/Contact.js","components/FullPage.js","App.js","serviceWorker.js","index.js"],"names":["previousTouchMove","Symbol","scrolling","wheelScroll","touchMove","keyPress","onWindowResized","addNextComponent","scrollWindowUp","scrollWindowDown","setRenderComponents","ANIMATION_TIMER","KEY_UP","KEY_DOWN","ReactPageScroller","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","window","addEventListener","document","ontouchmove","event","preventDefault","_pageContainer","componentsToRenderLength","_","isNil","children","state","componentIndex","componentWillUnmount","removeEventListener","goToPage","number","_this$props","pageOnChange","_this$state","newComponentsToRenderLength","isEqual","i","setState","style","transform","concat","setTimeout","animationTimer","deltaY","isNull","touches","clientY","keyCode","forceUpdate","componentsToRenderOnMountLength","Math","max","newComponentsToRender","_loop","push","react_default","a","createElement","key","ref","c","height","width","blockScrollUp","scrollUnavailable","prevState","blockScrollDown","_this2","_this$props2","transitionTimingFunction","containerHeight","containerWidth","overflow","onWheel","transition","tabIndex","React","Component","defaultProps","Home","className","SecondComponent","ThirdComponent","FourthComponent","FifthComponent","Contact","FullPage","eventKey","_pageScroller","currentPage","Fragment","ReactPageScroller_ReactPageScroller","App","FullPage_FullPage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5b93bf5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"babel-polyfill\";\nimport PropTypes from \"prop-types\"\nimport _ from \"lodash\";\n\nconst previousTouchMove = Symbol();\nconst scrolling = Symbol();\nconst wheelScroll = Symbol();\nconst touchMove = Symbol();\nconst keyPress = Symbol();\nconst onWindowResized = Symbol();\nconst addNextComponent = Symbol();\nconst scrollWindowUp = Symbol();\nconst scrollWindowDown = Symbol();\nconst setRenderComponents = Symbol();\n\n\nconst ANIMATION_TIMER = 200;\nconst KEY_UP = 38;\nconst KEY_DOWN = 40;\n\nexport default class ReactPageScroller extends React.Component {\n    static propTypes = {\n        animationTimer: PropTypes.number,\n        transitionTimingFunction: PropTypes.string,\n        pageOnChange: PropTypes.func,\n        scrollUnavailable: PropTypes.func,\n        containerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        containerWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        blockScrollUp: PropTypes.bool,\n        blockScrollDown: PropTypes.bool\n    };\n\n    static defaultProps = {\n        animationTimer: 1000,\n        transitionTimingFunction: \"ease-in-out\",\n        containerHeight: \"100vh\",\n        containerWidth: \"100vw\",\n        blockScrollUp: false,\n        blockScrollDown: false\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { componentIndex: 0, componentsToRenderLength: 0 };\n        this[previousTouchMove] = null;\n        this[scrolling] = false;\n    }\n\n    componentDidMount = () => {\n        window.addEventListener('resize', this[onWindowResized]);\n\n        document.ontouchmove = (event) => {\n            event.preventDefault();\n        };\n\n        this._pageContainer.addEventListener(\"touchmove\", this[touchMove]);\n        this._pageContainer.addEventListener(\"keydown\", this[keyPress]);\n\n        let componentsToRenderLength = 0;\n\n        if (!_.isNil(this.props.children[this.state.componentIndex])) {\n            componentsToRenderLength++;\n        } else {\n            componentsToRenderLength++;\n        }\n\n        this[addNextComponent](componentsToRenderLength);\n    };\n\n    componentWillUnmount = () => {\n        window.removeEventListener('resize', this[onWindowResized]);\n\n        this._pageContainer.removeEventListener(\"touchmove\", this[touchMove]);\n        this._pageContainer.removeEventListener(\"keydown\", this[keyPress]);\n\n    };\n\n    goToPage = (number) => {\n        const { pageOnChange, children } = this.props;\n        const { componentIndex, componentsToRenderLength } = this.state;\n\n        let newComponentsToRenderLength = componentsToRenderLength;\n\n        if (!_.isEqual(componentIndex, number)) {\n            if (!_.isNil(this[\"container_\" + (number)]) && !this[scrolling]) {\n\n                this[scrolling] = true;\n                this._pageContainer.style.transform = `translate3d(0, ${(number) * -100}%, 0)`;\n\n                if (pageOnChange) {\n                    pageOnChange(number + 1);\n                }\n\n                if (_.isNil(this[\"container_\" + (number + 1)]) && !_.isNil(children[number + 1])) {\n                    newComponentsToRenderLength++;\n                }\n\n                setTimeout(() => {\n                    this.setState({ componentIndex: number, componentsToRenderLength: newComponentsToRenderLength }, () => {\n                        this[scrolling] = false;\n                        this[previousTouchMove] = null;\n                    });\n                }, this.props.animationTimer + ANIMATION_TIMER)\n\n            } else if (!this[scrolling] && !_.isNil(children[number])) {\n                for (let i = componentsToRenderLength; i <= number; i++) {\n                    newComponentsToRenderLength++;\n                }\n\n                if (!_.isNil(children[number + 1])) {\n                    newComponentsToRenderLength++\n                }\n\n                this[scrolling] = true;\n                this.setState({\n                    componentsToRenderLength: newComponentsToRenderLength\n                }, () => {\n                    this._pageContainer.style.transform = `translate3d(0, ${(number) * -100}%, 0)`;\n\n                    if (pageOnChange) {\n                        pageOnChange(number + 1);\n                    }\n\n                    setTimeout(() => {\n                        this.setState({ componentIndex: number }, () => {\n                            this[scrolling] = false;\n                            this[previousTouchMove] = null;\n                        });\n                    }, this.props.animationTimer + ANIMATION_TIMER)\n                });\n            }\n        }\n    };\n\n    render() {\n        const { animationTimer, transitionTimingFunction, containerHeight, containerWidth } = this.props;\n\n        return (\n            <div style={{ height: containerHeight, width: containerWidth, overflow: \"hidden\" }}>\n                <div ref={c => this._pageContainer = c}\n                     onWheel={this[wheelScroll]}\n                     style={{\n                         height: \"100%\",\n                         width: \"100%\",\n                         transition: `transform ${animationTimer}ms ${transitionTimingFunction}`\n                     }}\n                     tabIndex={0}>\n                    {this[setRenderComponents]()}\n                </div>\n            </div>\n        )\n    }\n\n    [wheelScroll] = (event) => {\n        if (event.deltaY < 0) {\n            this[scrollWindowUp]();\n        } else {\n            this[scrollWindowDown]();\n        }\n\n    };\n\n    [touchMove] = (event) => {\n        if (!_.isNull(this[previousTouchMove])) {\n            if (event.touches[0].clientY > this[previousTouchMove]) {\n                this[scrollWindowUp]();\n            } else {\n                this[scrollWindowDown]();\n            }\n        } else {\n            this[previousTouchMove] = event.touches[0].clientY;\n        }\n    };\n\n    [keyPress] = (event) => {\n        if (_.isEqual(event.keyCode, KEY_UP)) {\n            this[scrollWindowUp]();\n        }\n        if (_.isEqual(event.keyCode, KEY_DOWN)) {\n            this[scrollWindowDown]();\n        }\n    };\n\n    [onWindowResized] = () => {\n        this.forceUpdate();\n    };\n\n    [addNextComponent] = (componentsToRenderOnMountLength) => {\n        let componentsToRenderLength = 0;\n\n        if (!_.isNil(componentsToRenderOnMountLength)) {\n            componentsToRenderLength = componentsToRenderOnMountLength;\n        }\n\n        componentsToRenderLength = Math.max(componentsToRenderLength, this.state.componentsToRenderLength);\n\n        if (componentsToRenderLength <= this.state.componentIndex + 1) {\n            if (!_.isNil(this.props.children[this.state.componentIndex + 1])) {\n                componentsToRenderLength++;\n            }\n        }\n\n        this.setState({\n            componentsToRenderLength\n        });\n    };\n\n    [setRenderComponents] = () => {\n        const newComponentsToRender = [];\n\n        for (let i = 0; i < this.state.componentsToRenderLength; i++) {\n            if (!_.isNil(this.props.children[i])) {\n                newComponentsToRender.push(\n                    <div key={i} ref={c => this[\"container_\" + i] = c}\n                         style={{ height: \"100%\", width: \"100%\" }}>\n                        {this.props.children[i]}\n                    </div>\n                );\n            } else {\n                break;\n            }\n        }\n\n        return newComponentsToRender;\n    };\n\n    [scrollWindowUp] = () => {\n        if (!this[scrolling] && !this.props.blockScrollUp) {\n            if (!_.isNil(this[\"container_\" + (this.state.componentIndex - 1)])) {\n                this[scrolling] = true;\n                this._pageContainer.style.transform = `translate3d(0, ${(this.state.componentIndex - 1) * -100}%, 0)`;\n\n                if (this.props.pageOnChange) {\n                    this.props.pageOnChange(this.state.componentIndex);\n                }\n\n                setTimeout(() => {\n                    this.setState((prevState) => ({ componentIndex: prevState.componentIndex - 1 }), () => {\n                        this[scrolling] = false;\n                        this[previousTouchMove] = null;\n                    });\n                }, this.props.animationTimer + ANIMATION_TIMER)\n\n            } else if (this.props.scrollUnavailable) {\n                this.props.scrollUnavailable();\n            }\n        }\n    };\n\n    [scrollWindowDown] = () => {\n        if (!this[scrolling] && !this.props.blockScrollDown) {\n            if (!_.isNil(this[\"container_\" + (this.state.componentIndex + 1)])) {\n                this[scrolling] = true;\n                this._pageContainer.style.transform = `translate3d(0, ${(this.state.componentIndex + 1) * -100}%, 0)`;\n\n                if (this.props.pageOnChange) {\n                    this.props.pageOnChange(this.state.componentIndex + 2);\n                }\n\n                setTimeout(() => {\n                    this.setState((prevState) => ({ componentIndex: prevState.componentIndex + 1 }), () => {\n                        this[scrolling] = false;\n                        this[previousTouchMove] = null;\n                        this[addNextComponent]();\n                    });\n                }, this.props.animationTimer + ANIMATION_TIMER)\n\n            } else if (this.props.scrollUnavailable) {\n                this.props.scrollUnavailable();\n            }\n        }\n    };\n}\n","import React from \"react\";\n\nexport default () => {\n    return (\n        <div className=\"component first-component\">\n            <h2>Mobiedock</h2>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default () => {\n    return (\n        <div className=\"component second-component\">\n            <h2>The Problem</h2>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default () => {\n    return (\n        <div className=\"component third-component\">\n            <h2>The Solution</h2>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default () => {\n    return (\n        <div className=\"component fourth-component\">\n            <h2>The Team</h2>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default () => {\n    return (\n        <div className=\"component fifth-component\">\n            <h2>Where we are</h2>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default () => {\n    return (\n        <div className=\"component contact-component\">\n            <h2>Contact Us</h2>\n        </div>\n    )\n}","import React from \"react\";\n\nimport ReactPageScroller from \"./ReactPageScroller\";\nimport Home from \"./Home\";\nimport SecondComponent from \"./SecondComponent\";\nimport ThirdComponent from \"./ThirdComponent\";\nimport FourthComponent from \"./FourthComponent\";\nimport FifthComponent from \"./FifthComponent\";\nimport Contact from \"./Contact\";\n\nimport \"../index.css\";\n\nexport default class FullPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {currentPage: 1};\n        this._pageScroller = null;\n    }\n\n    goToPage = (eventKey) => {\n        this._pageScroller.goToPage(eventKey);\n    };\n\n    pageOnChange = (number) => {\n        this.setState({currentPage: number});\n    };\n\n    render() {\n\n        return <React.Fragment>\n            <ReactPageScroller ref={c => this._pageScroller = c} pageOnChange={this.pageOnChange}>\n                <Home/>\n                <SecondComponent/>\n                <ThirdComponent/>\n                <FourthComponent goToPage={this.goToPage}/>\n                <FifthComponent/>\n                <Contact/>>\n            </ReactPageScroller>\n        </React.Fragment>\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport FullPage from './components/FullPage'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FullPage/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}